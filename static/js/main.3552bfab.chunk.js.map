{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textarea.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","btnText","setbtnText","color","backgroundColor","myStyle","setStyle","handleClick","border","style","className","onClick","htmlFor","id","type","Navbar","props","src","alt","srcset","href","title","course","d","Textarea","text","setText","value","onChange","event","console","log","target","name","cols","rows","ntext","toUpperCase","split","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAEe,SAASA,IACpB,MAA8BC,mBAAS,oBAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,CACjCG,MAAO,QACPC,gBAAiB,UAFrB,mBAAOC,EAAP,KAAgBC,EAAhB,KAIMC,EAAc,WACM,UAAlBF,EAAQF,OACRG,EAAS,CACLH,MAAO,QACPC,gBAAiB,QACjBI,OAAQ,kBAEZN,EAAW,uBAGXI,EAAS,CACLH,MAAO,QACPC,gBAAiB,UAErBF,EAAW,sBAInB,OAAS,gCAEL,sBACIO,MAAUJ,EACdK,UAAY,YAFZ,UAGA,6CAHA,IAIsB,qHAJtB,IAK6F,yBACtFC,QAAYJ,EACnBE,MAAUJ,EAFmF,cAErEJ,EAFqE,OAL7F,IAO6C,uBACvCW,QAAU,KAD6B,eAP7C,IAQiC,uBAC3BC,GAAK,KACXF,QAAYJ,EACZO,KAAO,gBAbF,OCvBE,SAASC,EAAOC,GAC7B,OACE,sBAAKH,GAAG,SAAR,UACE,qBAAKA,GAAG,OAAR,SACE,qBAAKI,IAAI,iBAAiBC,IAAI,eAAeC,OAAO,OAEtD,8BACE,+BACE,oBAAIT,UAAU,OAAd,SACE,mBAAGU,KAAK,QAAR,SAAiBJ,EAAMK,UAGzB,oBAAIX,UAAU,OAAd,SACE,mBAAGU,KAAK,sBAAR,SAA+BJ,EAAMM,WAEvC,oBAAIZ,UAAU,OAAd,SACE,mBAAGU,KAAK,kBAAR,uBAEF,oBAAIV,UAAU,OAAd,SACE,mBAAGU,KAAK,WAAR,4BAKN,uBAAOR,QAAQ,WAAUW,GAAC,EAA1B,uBACA,uBAAOV,GAAG,WAAWC,KAAK,gBC1BjB,SAASU,IACrB,IAYC,EAAqBxB,mBAAS,kBAA9B,mBAAOyB,EAAP,KAAYC,EAAZ,KACA,OACI,qCACA,gCACI,qBAAKhB,UAAU,cACf,0BAAUiB,MAAOF,EAAMG,SAVX,SAACC,GAEjBC,QAAQC,IAAI,kBACZL,EAAQG,EAAMG,OAAOL,QAOgCM,KAAK,OAAOpB,GAAG,GAAGqB,KAAK,KAAKC,KAAK,OAClF,wBAAQzB,UAAU,MAAMC,QAlBZ,WAEhBmB,QAAQC,IAAI,oBACZ,IAAIK,EAAMX,EAAKY,cACfX,EAAQU,IAcJ,kCAGJ,sBAAK1B,UAAU,SAAf,UACI,mDACA,8BAAIe,EAAKa,MAAM,KAAKC,OAApB,cAAuCd,EAAKc,OAA5C,uBCMGC,MAlBf,WACE,OACD,qCACA,cAACzB,EAAD,IACA,cAACS,EAAD,IACA,cAACzB,EAAD,QCPc0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3552bfab.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function About() {\r\n    const [btnText, setbtnText] = useState(\"Enable dark mode\");\r\n    const [myStyle, setStyle] = useState({\r\n        color: \"black\",\r\n        backgroundColor: \"white\"\r\n    });\r\n    const handleClick = () => {\r\n        if (myStyle.color === \"black\") {\r\n            setStyle({\r\n                color: \"white\",\r\n                backgroundColor: \"black\",\r\n                border: \"2px solid red\"\r\n            })\r\n            setbtnText(\"enable light mode\")\r\n\r\n        } else {\r\n            setStyle({\r\n                color: \"black\",\r\n                backgroundColor: \"white\"\r\n            })\r\n            setbtnText(\"enable dark mode\")\r\n\r\n        }\r\n    }\r\n    return ( <\r\n        div >\r\n        <\r\n        div style = { myStyle }\r\n        className = \"container\" >\r\n        <\r\n        h1 > I - notes < /h1> <\r\n        p > Lorem ipsum dolor sit amet consectetur adipisicing elit.Distinctio, reprehenderit! < /p> <\r\n        button onClick = { handleClick }\r\n        style = { myStyle } > { btnText } < /button> <\r\n        label htmlFor = \"cb\" > < /label> <\r\n        input id = \"cb\"\r\n        onClick = { handleClick }\r\n        type = \"checkbox\" / >\r\n        <\r\n        /div> < /\r\n        div >\r\n    )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div id=\"navbar\">\r\n      <div id=\"logo\">\r\n        <img src=\"img/mylogo.png\" alt=\"codewithbugg\" srcset=\"\" />\r\n      </div>\r\n      <div>\r\n        <ul>\r\n          <li className=\"item\">\r\n            <a href=\"#home\">{props.title}</a>\r\n            {/* <Link to=\"/\">Home</Link> */}\r\n          </li>\r\n          <li className=\"item\">\r\n            <a href=\"#services-container\">{props.course}</a>\r\n          </li>\r\n          <li className=\"item\">\r\n            <a href=\"#client-section\">faculty</a>\r\n          </li>\r\n          <li className=\"item\">\r\n            <a href=\"#contact\">contact</a>\r\n            {/* <Link to=\"/about\">About</Link> */}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <label htmlFor=\"checkbox\"d>dark-mode</label>\r\n      <input id=\"checkbox\" type=\"checkbox\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nexport default function Textarea() {\r\n   const clickHandlebtn=()=>\r\n    {\r\n        console.log(\"you have clicked\");\r\n        let ntext=text.toUpperCase();\r\n        setText(ntext);\r\n    \r\n    }\r\n  const  handleonChange=(event)=>\r\n    {  \r\n        console.log(\"onchange fired\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText]=useState('pls write here');\r\n    return (\r\n        <>\r\n        <div>\r\n            <div className=\"container\"></div>\r\n            <textarea value={text} onChange={handleonChange} name=\"text\" id=\"\" cols=\"30\" rows=\"10\" ></textarea>\r\n            <button className=\"btn\" onClick={clickHandlebtn}>Convert_UpperCase</button>\r\n            \r\n        </div>\r\n        <div className=\"sumary\">\r\n            <h2>yout text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","// import logo from './logo.svg';\n// import './App.css';\n// import Navbar from './components/Navbar';\n// import Form from './components/Form';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport{\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n <>\n <Navbar/>\n <Textarea/>\n <About/>\n {/* <Router>\n <Navbar title=\"home\"/>\n <Routes>\n <Route path=\"/\" element={<Textarea />} />\n        <Route path=\"about\" element={<About />} />\n\n </Routes>\n </Router> */}\n </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}